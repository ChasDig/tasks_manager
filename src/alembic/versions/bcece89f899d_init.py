"""init

Revision ID: bcece89f899d
Revises: 
Create Date: 2025-08-24 13:20:34.656960

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from models.pg_models.custom_enum import Schemas, task_status_enum

# revision identifiers, used by Alembic.
revision: str = 'bcece89f899d'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    op.execute(f"""CREATE SCHEMA IF NOT EXISTS {Schemas.task_manager.name};""")

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('task',
    sa.Column('title', sa.String(length=256), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('status', postgresql.ENUM('create', 'in_process', 'completed', name='task_status_enum'), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='task_manager'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('task', schema='task_manager')


    op.execute(f"""DROP TYPE IF EXISTS {task_status_enum.name};""")
    op.execute(f"""DROP SCHEMA IF EXISTS {Schemas.task_manager.name};""")
    # ### end Alembic commands ###
