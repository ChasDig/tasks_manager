services:
  nginx_task_manager:
    build: ./nginx
    container_name: nginx_task_manager
    ports:
      - "${NGINX_PORT}:${NGINX_PORT}"
    env_file: .env
    environment:
      TASK_MANAGER_SERVICE_HOST: task_manager_service
      TASK_MANAGER_SERVICE_PORT: ${TASK_MANAGER_SERVICE_PORT}
    volumes:
      - ./nginx/static:/usr/share/nginx/static:ro  # Статика(read-only)
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro  # Конфиги базовые
      - ./nginx/conf.d:/etc/nginx/conf.d:ro  # Конфиги для сервисов
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - task_manager_service
    networks:
      - sec_network

  task_manager_service:
    build: .
    container_name: task_manager_service
    restart: unless-stopped
    env_file: .env
    expose:
      - "$TASK_MANAGER_SERVICE_PORT"
    depends_on:
      pg_db:
        condition: service_healthy
    networks:
      - sec_network

  pg_db:
    image: postgres:17.5
    container_name: pg_db
    restart: unless-stopped
    env_file: .env
    expose:
      - "5432"
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_ADMIN_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - pg_db_data:/var/lib/postgresql/data
      - ./pg-init:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      start_period: 10s
      interval: 3s
      timeout: 3s
      retries: 3
    networks:
      - sec_network

volumes:
  pg_db_data:

networks:
  sec_network:
    driver: bridge
